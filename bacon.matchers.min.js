(function(){var t,n=[].slice;t=Bacon.Observable,t.prototype.self=function(){return this},t.prototype.is=function(){var t,r,e;return r=arguments[0],t=arguments.length>=2?n.call(arguments,1):[],null!=(e=this[r])?e.apply(this,t):void 0},t.prototype.not=function(){var t,r;return t=arguments.length>=1?n.call(arguments,0):[],r=!this.is.apply(this,t),Bacon.constant(r)},t.prototype.equals=function(t){return this.map(function(n){return n===t})},t.prototype.matches=function(t){return this.map(function(n){return null!=t?t.test(n):void 0})},t.prototype.field=function(t){return this.map("."+t)},t.prototype.toNumber=function(){return this.map(function(t){return isFinite(t)?parseFloat(t):t})},t.prototype["in"]=function(t){return this.map(function(n){return Bacon._.contains(t,n)})},t.prototype.isArray=function(){return this.map(function(t){return t instanceof Array})},t.prototype.inRange=function(t,n){return t===n?this.equals(t):this.map(function(r){return n>t?r>=t&&n>=r:r>=n&&t>=r})},t.prototype.isBetween=function(t,n){return t===n?this.equals(t):this.map(function(r){return n>t?r>t&&n>r:r>n&&t>r})}}).call(this);